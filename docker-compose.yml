name: wit-project

# This is just an example and is not intended for production use.

services:
  db:
    # The newest MySQL image did not work with the --default-authentication-plugin option,
    # hence mysql-server:8.0 is used.
    # The default authentication plugin needs to be set to mysql_native_password
    # because the npm package 'mysql' used in the Node.js app
    # does not support the new MySQL authentication method.
    image: mysql/mysql-server:8.0
    command: ["mysqld", "--default-authentication-plugin=mysql_native_password"]
    restart: always
    ports:
      - "3306:3306"
    volumes:
      - ./src/db/create-db.sql:/docker-entrypoint-initdb.d/create-db.sql
    environment:
      # In a prod-grade setup, password should be passed using secrets management tools like:
      # Docker secrets, AWS Secrets Manager,
      # or environment variables. For example:
      # MYSQL_ROOT_PASSWORD_FILE: /run/secrets/mysql_root_password
      MYSQL_ROOT_PASSWORD: root
    healthcheck:
      test: ["CMD-SHELL", "mysql -uroot -proot -e 'SELECT COUNT(*) as db_exists FROM information_schema.schemata WHERE schema_name = \"wit\";'"]
      interval: 5s
      timeout: 90s
      retries: 5
      start_period: 5s


  xdd:
    image: mysql/mysql-server:8.0
    command: ["sh", "-c", "mysql -hdb -uwitadmin -pwitadmin < /docker-entrypoint-initdb.d/create-table.sql"]
    depends_on:
      db:
        condition: service_healthy
    volumes:
      - ./src/db/create-table.sql:/docker-entrypoint-initdb.d/create-table.sql